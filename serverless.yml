functions:
  add_comment:
    handler: src/add_comment.handler
    events:
      - http:
          path: posts/{id}
          method: post
          cors: true
          request:
            parameters:
              paths:
                id: true
  create_post:
    handler: src/create_post.handler
    events:
      - http:
          path: posts/create
          method: post
          cors: true
  get_post:
    handler: src/get_post.handler
    events:
      - http:
          path: posts/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  list_posts:
    handler: src/list_posts.handler
    events:
      - http:
          path: posts
          method: get
          cors: true
package:
  exclude:
  - ./**
  - '!src/**'
  - src/unit_test/**
  - src/integration_test/**
provider:
  deploymentBucket: ${env:DEPLOYMENT_BUCKET}
  environment:
    DYNAMO_TABLE: ${self:resources.Outputs.PostsTable.Value}
  iamRoleStatements:
  - Action: dynamodb:*
    Effect: Allow
    Resource:
    - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/posts${opt:stage}
  logRetentionInDays: 14
  memorySize: 128
  name: aws
  region: eu-west-1
  runtime: python3.7
  timeout: 15
resources:
  Outputs:
    PostsTable:
      Value: posts${opt:stage}
  Resources:
    PostsTable:
      Properties:
        AttributeDefinitions:
        - AttributeName: post_id
          AttributeType: N
        BillingMode: PAY_PER_REQUEST
        KeySchema:
        - AttributeName: post_id
          KeyType: HASH
        TableName: posts${opt:stage}
      Type: AWS::DynamoDB::Table
service:
  name: simple-blog
plugins:
- serverless-pseudo-parameters